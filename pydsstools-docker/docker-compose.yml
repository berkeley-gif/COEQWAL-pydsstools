services:
  convert:
    container_name: dss_converter
    build: .
    volumes:
      # Mount codebase (inside pydsstools-docker) as /app
      - "${PWD}:/app"
      # Mount repo-level data directory as /data (../data from pydsstools-docker)
      - "${PWD}/../data:/data"
    working_dir: /app
    entrypoint: ["python", "python-code/dss_to_csv.py"]

  validate-sample:
    container_name: dss_validator_sample
    build: .
    volumes:
      # Mount codebase (inside pydsstools-docker) as /app
      - "${PWD}:/app"
      # Mount repo-level data directory as /data (../data from pydsstools-docker)
      - "${PWD}/../data:/data"
    working_dir: /app
    entrypoint: ["python", "python-code/validate_dss_to_csv.py"]
    
  validate-all:
    container_name: dss_validator
    build: .
    volumes:
      # Mount codebase (inside pydsstools-docker) as /app
      - "${PWD}:/app"
      # Mount repo-level data directory as /data (../data from pydsstools-docker)
      - "${PWD}/../data:/data"
    working_dir: /app
    entrypoint: ["python", "python-code/validate_dss_to_csv.py", "--all"]



